{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Exchange.vue?vue&type=template&id=7d07e4d3&","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Exchange.vue","mtime":1558249183000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"exchange\" } }, [\n    _c(\"h2\", { attrs: { id: \"currency_header\" } }, [\n      _vm._v(\"YOUR CURRENCY & ACCOUNT\")\n    ]),\n    _c(\n      \"div\",\n      { attrs: { id: \"Lcurrency\" } },\n      [\n        _c(\n          \"v-layout\",\n          { attrs: { row: \"\" } },\n          [\n            _c(\n              \"v-flex\",\n              { attrs: { xs6: \"\" } },\n              [_c(\"v-subheader\", [_vm._v(\"Line Point\")])],\n              1\n            ),\n            _c(\n              \"v-flex\",\n              { attrs: { xs10: \"\" } },\n              [\n                _c(\"v-text-field\", {\n                  staticClass: \"input_text\",\n                  attrs: {\n                    label: \"Amount\",\n                    value: _vm.user.linepoint,\n                    prefix: \"$\",\n                    color: \"cyan\",\n                    readonly: \"\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"v-flex\",\n              { attrs: { xs6: \"\" } },\n              [_c(\"v-subheader\", [_vm._v(\"BCP Point\")])],\n              1\n            ),\n            _c(\n              \"v-flex\",\n              { attrs: { xs10: \"\" } },\n              [\n                _c(\"v-text-field\", {\n                  staticClass: \"input_text\",\n                  attrs: {\n                    label: \"Amount\",\n                    value: _vm.user.bcppoint,\n                    prefix: \"$\",\n                    readonly: \"\",\n                    color: \"cyan\"\n                  }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\"div\", { attrs: { id: \"Bcurrency\" } }, [\n      _c(\"div\", { staticClass: \"metamask-info\" }, [\n        _vm.isInjected\n          ? _c(\"p\", { attrs: { id: \"has-metamask\" } }, [\n              _c(\"i\", {\n                staticClass: \"fa fa-check\",\n                attrs: { \"aria-hidden\": \"true\" }\n              }),\n              _vm._v(\" Metamask installed\\n      \")\n            ])\n          : _c(\"p\", { attrs: { id: \"no-metamask\" } }, [\n              _c(\"i\", {\n                staticClass: \"fa fa-times\",\n                attrs: { \"aria-hidden\": \"true\" }\n              }),\n              _vm._v(\" Metamask not found\\n      \")\n            ]),\n        _c(\"p\", [_vm._v(\"Network: \" + _vm._s(_vm.network))]),\n        _c(\"p\", [_vm._v(\"Account: \" + _vm._s(_vm.coinbase))]),\n        _c(\"p\", [_vm._v(\"Balance: \" + _vm._s(_vm.balance) + \" Wei\")])\n      ])\n    ]),\n    _c(\"h2\", { attrs: { id: \"exchange_header\" } }, [\n      _vm._v(\"EXCHANGE CURRENCY\")\n    ]),\n    _c(\n      \"div\",\n      { attrs: { id: \"linepoint\" } },\n      [\n        _c(\"img\", {\n          staticClass: \"point\",\n          attrs: { src: require(\"../assets/line.svg\") }\n        }),\n        _c(\"v-text-field\", {\n          directives: [\n            {\n              name: \"validate\",\n              rawName: \"v-validate\",\n              value: \"required|numeric|max_value:\" + _vm.user.linepoint,\n              expression: \"'required|numeric|max_value:' + user.linepoint\"\n            }\n          ],\n          staticClass: \"ex_text\",\n          attrs: {\n            \"data-vv-name\": \"point\",\n            \"error-messages\": _vm.errors.collect(\"point\"),\n            label: \"Line point\",\n            prefix: \"$\",\n            placeholder: \"enter your point\",\n            color: \"cyan\"\n          },\n          model: {\n            value: _vm.displayCurrency,\n            callback: function($$v) {\n              _vm.displayCurrency = $$v\n            },\n            expression: \"displayCurrency\"\n          }\n        })\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { attrs: { id: \"bcppoint\" } },\n      [\n        _c(\"img\", {\n          staticClass: \"point\",\n          attrs: { src: require(\"../assets/money-bag.svg\") }\n        }),\n        _c(\"v-text-field\", {\n          staticClass: \"ex_text\",\n          attrs: {\n            label: \"BCP point\",\n            prefix: \"$\",\n            color: \"cyan\",\n            readonly: \"\"\n          },\n          model: {\n            value: _vm.exCurrency,\n            callback: function($$v) {\n              _vm.exCurrency = $$v\n            },\n            expression: \"exCurrency\"\n          }\n        })\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { attrs: { id: \"btn_submit\" } },\n      [\n        _c(\n          \"v-btn\",\n          { attrs: { color: \"warning\" }, on: { click: _vm.getBalance } },\n          [_vm._v(\"Submit\")]\n        ),\n        _c(\n          \"v-btn\",\n          { attrs: { color: \"warning\" }, on: { click: _vm.Distributed } },\n          [_vm._v(\"Submit\")]\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}