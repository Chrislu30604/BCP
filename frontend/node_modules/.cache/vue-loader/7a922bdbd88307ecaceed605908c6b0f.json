{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/views/Launch.vue?vue&type=template&id=3ddc24ed&","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/views/Launch.vue","mtime":1558256434663},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-content\",\n    [\n      _c(\n        \"v-container\",\n        { attrs: { \"fill-height\": \"\", id: \"donate\" } },\n        [\n          _c(\n            \"v-layout\",\n            { attrs: { \"align-center\": \"\", \"justify-center\": \"\" } },\n            [\n              _c(\n                \"v-flex\",\n                { staticClass: \"login-form text-xs-center\" },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"display-1 mb-3\" },\n                    [\n                      _c(\n                        \"v-icon\",\n                        { staticClass: \"mr-2\", attrs: { large: \"large\" } },\n                        [_vm._v(\"work\")]\n                      ),\n                      _vm._v(\"Launch Your Donation Project\\n        \")\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-card\",\n                    [\n                      _c(\n                        \"v-card-text\",\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"subheading\" },\n                            [[_vm._v(\"Fill the form\")]],\n                            2\n                          ),\n                          _c(\n                            \"v-form\",\n                            [\n                              _c(\"v-text-field\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required|max:20\",\n                                    expression: \"'required|max:20'\"\n                                  }\n                                ],\n                                attrs: {\n                                  \"data-vv-name\": \"title\",\n                                  \"error-messages\": _vm.errors.collect(\"title\"),\n                                  \"prepend-icon\": \"subtitles\",\n                                  label: \"Enter the Project Title\",\n                                  color: \"cyan\",\n                                  required: \"\"\n                                },\n                                model: {\n                                  value: _vm.user.title,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.user, \"title\", $$v)\n                                  },\n                                  expression: \"user.title\"\n                                }\n                              }),\n                              _c(\"v-text-field\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required|max:20\",\n                                    expression: \"'required|max:20'\"\n                                  }\n                                ],\n                                attrs: {\n                                  \"data-vv-name\": \"name\",\n                                  \"error-messages\": _vm.errors.collect(\"name\"),\n                                  \"prepend-icon\": \"person\",\n                                  label: \"Beneficiary and Sponsor\",\n                                  color: \"cyan\",\n                                  required: \"\"\n                                },\n                                model: {\n                                  value: _vm.user.name,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.user, \"name\", $$v)\n                                  },\n                                  expression: \"user.name\"\n                                }\n                              }),\n                              _c(\"v-text-field\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required|email\",\n                                    expression: \"'required|email'\"\n                                  }\n                                ],\n                                attrs: {\n                                  \"data-vv-name\": \"email\",\n                                  \"error-messages\": _vm.errors.collect(\"email\"),\n                                  \"prepend-icon\": \"email\",\n                                  label: \"Email\",\n                                  type: \"email\",\n                                  color: \"cyan\",\n                                  required: \"\"\n                                },\n                                model: {\n                                  value: _vm.user.email,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.user, \"email\", $$v)\n                                  },\n                                  expression: \"user.email\"\n                                }\n                              }),\n                              _c(\"v-text-field\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"between:1,1000000\",\n                                    expression: \"'between:1,1000000'\"\n                                  }\n                                ],\n                                attrs: {\n                                  \"data-vv-name\": \"dollars\",\n                                  \"error-messages\": _vm.errors.collect(\n                                    \"dollars\"\n                                  ),\n                                  \"prepend-icon\": \"attach_money\",\n                                  label: \"Estimated point\",\n                                  type: \"text\",\n                                  color: \"cyan\",\n                                  required: \"\"\n                                },\n                                model: {\n                                  value: _vm.user.dollars,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.user, \"dollars\", $$v)\n                                  },\n                                  expression: \"user.dollars\"\n                                }\n                              }),\n                              _c(\n                                \"v-menu\",\n                                {\n                                  attrs: {\n                                    \"close-on-content-click\": false,\n                                    \"nudge-right\": 40,\n                                    lazy: \"\",\n                                    transition: \"scale-transition\",\n                                    \"offset-y\": \"\",\n                                    \"full-width\": \"\",\n                                    \"min-width\": \"290px\"\n                                  },\n                                  scopedSlots: _vm._u([\n                                    {\n                                      key: \"activator\",\n                                      fn: function(ref) {\n                                        var on = ref.on\n                                        return [\n                                          _c(\n                                            \"v-text-field\",\n                                            _vm._g(\n                                              {\n                                                attrs: {\n                                                  slot: \"activator\",\n                                                  label: \"End time\",\n                                                  \"prepend-icon\": \"date_range\",\n                                                  readonly: \"\",\n                                                  color: \"cyan\",\n                                                  required: \"\"\n                                                },\n                                                slot: \"activator\",\n                                                model: {\n                                                  value: _vm.user.enddate,\n                                                  callback: function($$v) {\n                                                    _vm.$set(\n                                                      _vm.user,\n                                                      \"enddate\",\n                                                      $$v\n                                                    )\n                                                  },\n                                                  expression: \"user.enddate\"\n                                                }\n                                              },\n                                              on\n                                            )\n                                          )\n                                        ]\n                                      }\n                                    }\n                                  ]),\n                                  model: {\n                                    value: _vm.menu,\n                                    callback: function($$v) {\n                                      _vm.menu = $$v\n                                    },\n                                    expression: \"menu\"\n                                  }\n                                },\n                                [\n                                  _c(\"v-date-picker\", {\n                                    attrs: { min: _vm.today },\n                                    on: {\n                                      input: function($event) {\n                                        _vm.menu = false\n                                      }\n                                    },\n                                    model: {\n                                      value: _vm.user.date,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.user, \"date\", $$v)\n                                      },\n                                      expression: \"user.date\"\n                                    }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\"v-textarea\", {\n                                attrs: {\n                                  \"prepend-icon\": \"description\",\n                                  name: \"Description\",\n                                  box: \"\",\n                                  label: \"Description\",\n                                  flat: \"\",\n                                  color: \"cyan\",\n                                  required: \"\"\n                                },\n                                model: {\n                                  value: _vm.user.description,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.user, \"description\", $$v)\n                                  },\n                                  expression: \"user.description\"\n                                }\n                              }),\n                              _c(\n                                \"upload-btn\",\n                                {\n                                  attrs: {\n                                    title: \"UPLOAD IMAGE\",\n                                    color: \"blue-grey\"\n                                  },\n                                  on: { \"file-update\": _vm.update }\n                                },\n                                [\n                                  _c(\n                                    \"template\",\n                                    { slot: \"icon-left\" },\n                                    [\n                                      _c(\n                                        \"v-icon\",\n                                        { attrs: { left: \"\", dark: \"\" } },\n                                        [_vm._v(\"cloud_upload\")]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                2\n                              ),\n                              _c(\n                                \"v-btn\",\n                                {\n                                  staticClass: \"white--text\",\n                                  attrs: {\n                                    block: \"block\",\n                                    color: \"cyan\",\n                                    type: \"submit\"\n                                  },\n                                  on: {\n                                    click: [\n                                      function($event) {\n                                        $event.preventDefault()\n                                      },\n                                      _vm.submit\n                                    ]\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                Submit\\n              \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm.options.isLoggingIn\n                    ? _c(\n                        \"div\",\n                        [\n                          _vm._v(\n                            \"\\n          Don't have an account?\\n          \"\n                          ),\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { light: \"light\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.options.isLoggingIn = false\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\"\\n            Sign up\\n            \"),\n                              _c(\"v-icon\", { attrs: { right: \"\", dark: \"\" } }, [\n                                _vm._v(\"cloud_upload\")\n                              ])\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}