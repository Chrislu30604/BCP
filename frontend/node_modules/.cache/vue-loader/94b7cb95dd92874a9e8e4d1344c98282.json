{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/views/Launch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/views/Launch.vue","mtime":1558256434663},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UploadButton from 'vuetify-upload-button';\nexport default {\n  data() {\n    return {\n      user: {\n        title: \"\",\n        name: \"\",\n        email: \"\",\n        dollars: \"\",\n        enddate: new Date().toISOString().substr(0, 10),\n        description: \"\",\n        file: null,\n        url: \"\",\n      },\n      options: {},\n      menu: false,\n      today: new Date().toISOString().substr(0, 10)\n    };\n  },\n  components: {\n    'upload-btn': UploadButton\n  },\n\n  methods: {\n    submit() {\n      this.$validator.validateAll().then(async (valid) => {\n        if (valid) {\n          let form = new FormData()\n          form.append('image', this.user.file)\n          // 1. Post image to IMGUR\n          const imgURL =  \"https://api.imgur.com/3/image\"\n          const clientID = \"8c2fff697c335bc\"\n          let config = {\n            headers: {\n              'Authorization': 'Client-ID ' + clientID,\n          }}\n          await this.axios.post(imgURL, \n            form,\n            config\n          )\n          .then((response) => {\n            console.log(response.data.data.link)\n            this.user.url = response.data.data.link\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n\n          // 2. Post Information to Backend\n\n          const url = \"http://127.0.0.1:8081/launch/propose\";\n          const obj = this.user\n          let configs = { headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': 'multipart/form-data'}};\n          let Postform = new FormData()\n          Postform.append(\"title\", obj.title)\n          Postform.append(\"name\", obj.name)\n          Postform.append(\"email\", obj.email)\n          Postform.append(\"dollars\", obj.dollars)\n          Postform.append(\"enddate\", obj.enddate)\n          Postform.append(\"description\", obj.description)\n          Postform.append(\"url\", obj.url)\n\n          this.axios\n            .post(url,\n                  Postform,\n                  configs)\n            .then((response) => {\n              console.log(response)\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n      });\n    },\n    update(file) {\n      this.user.file = file\n    },\n  }\n};\n",{"version":3,"sources":["Launch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Launch.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-content>\n    <v-container fill-height id=\"donate\">\n      <v-layout align-center justify-center>\n        <v-flex class=\"login-form text-xs-center\">\n          <div class=\"display-1 mb-3\">\n            <v-icon class=\"mr-2\" large=\"large\">work</v-icon>Launch Your Donation Project\n          </div>\n          <v-card>\n            <v-card-text>\n              <div class=\"subheading\">\n                <template>Fill the form</template>\n              </div>\n              <v-form>\n                <v-text-field\n                  v-validate=\"'required|max:20'\"\n                  data-vv-name=\"title\"\n                  :error-messages=\"errors.collect('title')\"\n                  v-model=\"user.title\"\n                  prepend-icon=\"subtitles\"\n                  label=\"Enter the Project Title\"\n                  color=\"cyan\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  v-validate=\"'required|max:20'\"\n                  data-vv-name=\"name\"\n                  :error-messages=\"errors.collect('name')\"\n                  v-model=\"user.name\"\n                  prepend-icon=\"person\"\n                  label=\"Beneficiary and Sponsor\"\n                  color=\"cyan\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  v-model=\"user.email\"\n                  v-validate=\"'required|email'\"\n                  data-vv-name=\"email\"\n                  :error-messages=\"errors.collect('email')\"\n                  prepend-icon=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  color=\"cyan\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  v-model=\"user.dollars\"\n                  v-validate=\"'between:1,1000000'\"\n                  data-vv-name=\"dollars\"\n                  :error-messages=\"errors.collect('dollars')\"\n                  prepend-icon=\"attach_money\"\n                  label=\"Estimated point\"\n                  type=\"text\"\n                  color=\"cyan\"\n                  required\n                ></v-text-field>\n                <v-menu\n                  v-model=\"menu\"\n                  :close-on-content-click=\"false\"\n                  :nudge-right=\"40\"\n                  lazy\n                  transition=\"scale-transition\"\n                  offset-y\n                  full-width\n                  min-width=\"290px\"\n                >\n                  <template v-slot:activator=\"{ on }\">\n                    <v-text-field\n                      v-model=\"user.enddate\"\n                      slot=\"activator\"\n                      label=\"End time\"\n                      prepend-icon=\"date_range\"\n                      readonly\n                      v-on=\"on\"\n                      color=\"cyan\"\n                      required\n                    ></v-text-field>\n                  </template>\n                  <v-date-picker v-model=\"user.date\" @input=\"menu = false\" :min=\"today\"></v-date-picker>\n                </v-menu>\n                <v-textarea\n                  prepend-icon=\"description\"\n                  name=\"Description\"\n                  box\n                  label=\"Description\"\n                  flat\n                  v-model=\"user.description\"\n                  color=\"cyan\"\n                  required\n                ></v-textarea>\n                <upload-btn\n                  @file-update=\"update\"\n                  title=\"UPLOAD IMAGE\"\n                  color=\"blue-grey\"\n                >\n                  <template slot=\"icon-left\">\n                    <v-icon left dark>cloud_upload</v-icon>\n                  </template>\n                </upload-btn>\n                <v-btn\n                  @click.prevent\n                  block=\"block\"\n                  @click=\"submit\"\n                  color=\"cyan\"\n                  class=\"white--text\"\n                  type=\"submit\"\n                >\n                  Submit\n                </v-btn>\n              </v-form>\n            </v-card-text>\n          </v-card>\n          <div v-if=\"options.isLoggingIn\">\n            Don't have an account?\n            <v-btn light=\"light\" @click=\"options.isLoggingIn = false\">\n              Sign up\n              <v-icon right dark>cloud_upload</v-icon>\n            </v-btn>\n          </div>\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </v-content>\n</template>\n\n<script>\nimport UploadButton from 'vuetify-upload-button';\nexport default {\n  data() {\n    return {\n      user: {\n        title: \"\",\n        name: \"\",\n        email: \"\",\n        dollars: \"\",\n        enddate: new Date().toISOString().substr(0, 10),\n        description: \"\",\n        file: null,\n        url: \"\",\n      },\n      options: {},\n      menu: false,\n      today: new Date().toISOString().substr(0, 10)\n    };\n  },\n  components: {\n    'upload-btn': UploadButton\n  },\n\n  methods: {\n    submit() {\n      this.$validator.validateAll().then(async (valid) => {\n        if (valid) {\n          let form = new FormData()\n          form.append('image', this.user.file)\n          // 1. Post image to IMGUR\n          const imgURL =  \"https://api.imgur.com/3/image\"\n          const clientID = \"8c2fff697c335bc\"\n          let config = {\n            headers: {\n              'Authorization': 'Client-ID ' + clientID,\n          }}\n          await this.axios.post(imgURL, \n            form,\n            config\n          )\n          .then((response) => {\n            console.log(response.data.data.link)\n            this.user.url = response.data.data.link\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n\n          // 2. Post Information to Backend\n\n          const url = \"http://127.0.0.1:8081/launch/propose\";\n          const obj = this.user\n          let configs = { headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': 'multipart/form-data'}};\n          let Postform = new FormData()\n          Postform.append(\"title\", obj.title)\n          Postform.append(\"name\", obj.name)\n          Postform.append(\"email\", obj.email)\n          Postform.append(\"dollars\", obj.dollars)\n          Postform.append(\"enddate\", obj.enddate)\n          Postform.append(\"description\", obj.description)\n          Postform.append(\"url\", obj.url)\n\n          this.axios\n            .post(url,\n                  Postform,\n                  configs)\n            .then((response) => {\n              console.log(response)\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n      });\n    },\n    update(file) {\n      this.user.file = file\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#donate {\n  width: 40%;\n}\n#upload {\n  height: 0;\n  width: 0;\n  visibility: hidden;\n}\n</style>\n"]}]}