{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Overview.vue?vue&type=template&id=6408adae&","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Overview.vue","mtime":1558254874935},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"overview\" } }, [\n    _c(\n      \"div\",\n      { attrs: { id: \"email-passw\" } },\n      [\n        _c(\"h2\", [_vm._v(\"EMAILS\")]),\n        _c(\n          \"v-form\",\n          [\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"email\",\n                \"error-messages\": _vm.errors.collect(\"email\"),\n                \"prepend-icon\": \"email\",\n                color: \"cyan\",\n                required: \"\"\n              },\n              model: {\n                value: _vm.user.email,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"email\", $$v)\n                },\n                expression: \"user.email\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"new_email\",\n                \"error-messages\": _vm.errors.collect(\"new_email\"),\n                placeholder: \"Enter your another email\",\n                \"prepend-icon\": \"email\",\n                color: \"cyan\",\n                required: \"\"\n              },\n              model: {\n                value: _vm.user.new_email,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"new_email\", $$v)\n                },\n                expression: \"user.new_email\"\n              }\n            }),\n            _c(\"div\", { staticClass: \"divider\" })\n          ],\n          1\n        ),\n        _c(\"h2\", [_vm._v(\"PASSWORD\")]),\n        _c(\n          \"v-form\",\n          [\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|min:6\",\n                  expression: \"'required|min:6'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"password\",\n                \"error-messages\": _vm.errors.collect(\"password\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"lock\",\n                placeholder: \"Enter your current password\",\n                type: \"password\"\n              },\n              model: {\n                value: _vm.user.password,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"password\", $$v)\n                },\n                expression: \"user.password\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|min:6\",\n                  expression: \"'required|min:6'\"\n                }\n              ],\n              ref: \"passwd\",\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"new_password\",\n                \"error-messages\": _vm.errors.collect(\"new_password\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"lock\",\n                placeholder: \"Enter your new password\",\n                type: \"password\"\n              },\n              model: {\n                value: _vm.user.new_password,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"new_password\", $$v)\n                },\n                expression: \"user.new_password\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|confirmed:passwd\",\n                  expression: \"'required|confirmed:passwd'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"match_password\",\n                \"error-messages\": _vm.errors.collect(\"match_password\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"lock\",\n                placeholder: \"Retype your new password\",\n                type: \"password\"\n              },\n              model: {\n                value: _vm.user.match_password,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"match_password\", $$v)\n                },\n                expression: \"user.match_password\"\n              }\n            })\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { attrs: { id: \"information\" } },\n      [\n        _c(\"h2\", [_vm._v(\"ACCOUNT INFORMATION\")]),\n        _c(\n          \"v-form\",\n          [\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|max:20|alpha_spaces\",\n                  expression: \"'required|max:20|alpha_spaces'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                counter: 20,\n                \"data-vv-name\": \"username\",\n                \"error-messages\": _vm.errors.collect(\"username\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"account_circle\",\n                placeholder: \"Full Name\"\n              },\n              model: {\n                value: _vm.user.username,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"username\", $$v)\n                },\n                expression: \"user.username\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|alpha_spaces\",\n                  expression: \"'required|alpha_spaces'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"company\",\n                \"error-messages\": _vm.errors.collect(\"company\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"home\",\n                placeholder: \"Company\"\n              },\n              model: {\n                value: _vm.user.company,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"company\", $$v)\n                },\n                expression: \"user.company\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|numeric\",\n                  expression: \"'required|numeric'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"phone\",\n                \"error-messages\": _vm.errors.collect(\"phone\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"phone_in_talk\",\n                placeholder: \"Phone\"\n              },\n              model: {\n                value: _vm.user.phone,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"phone\", $$v)\n                },\n                expression: \"user.phone\"\n              }\n            }),\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"input_text\",\n              attrs: {\n                \"data-vv-name\": \"profile_url\",\n                \"error-messages\": _vm.errors.collect(\"profile_url\"),\n                color: \"cyan\",\n                \"prepend-icon\": \"whatshot\",\n                placeholder: \"Profile Url\"\n              },\n              model: {\n                value: _vm.user.profile_url,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"profile_url\", $$v)\n                },\n                expression: \"user.profile_url\"\n              }\n            }),\n            _c(\"div\", { staticClass: \"divider\" }),\n            _c(\"v-btn\", { attrs: { color: \"warning\" } }, [_vm._v(\"Submit\")])\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}