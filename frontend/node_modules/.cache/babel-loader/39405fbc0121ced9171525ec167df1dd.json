{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/babel-loader/lib/index.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/web3/pollWeb3.js","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/web3/pollWeb3.js","mtime":1558245216000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Web3 from 'web3';\nimport { store } from \"../store/store\";\n\nvar pollWeb3 = function pollWeb3(state) {\n  var web3 = window.web3;\n  web3 = new Web3(web3.currentProvider);\n  setInterval(function () {\n    if (web3 && store.state.web3.web3Instance) {\n      if (web3.eth.coinbase !== store.state.web3.coinbase) {\n        var newCoinbase = web3.eth.coinbase;\n        web3.eth.getBalance(web3.eth.coinbase, function (err, newBalance) {\n          if (err) {\n            console.log(err);\n          } else {\n            store.dispatch('pollWeb3', {\n              coinbase: newCoinbase,\n              balance: parseInt(newBalance, 10)\n            });\n          }\n        });\n      } else {\n        web3.eth.getBalance(store.state.web3.coinbase, function (err, polledBalance) {\n          if (err) {\n            console.log(err);\n          } else if (parseInt(polledBalance, 10) !== store.state.web3.balance) {\n            store.dispatch('pollWeb3', {\n              coinbase: store.state.web3.coinbase,\n              balance: polledBalance\n            });\n          }\n        });\n      }\n    }\n  }, 500);\n};\n\nexport default pollWeb3;",{"version":3,"sources":["/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/web3/pollWeb3.js"],"names":["Web3","store","pollWeb3","state","web3","window","currentProvider","setInterval","web3Instance","eth","coinbase","newCoinbase","getBalance","err","newBalance","console","log","dispatch","balance","parseInt","polledBalance"],"mappings":"AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,KAAR;;AAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,KAAV,EAAiB;AAC9B,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAlB;AACAA,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASI,IAAI,CAACE,eAAd,CAAP;AAEAC,EAAAA,WAAW,CAAC,YAAM;AAChB,QAAIH,IAAI,IAAIH,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBI,YAA7B,EAA2C;AACzC,UAAIJ,IAAI,CAACK,GAAL,CAASC,QAAT,KAAsBT,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBM,QAA3C,EAAqD;AACnD,YAAIC,WAAW,GAAGP,IAAI,CAACK,GAAL,CAASC,QAA3B;AACAN,QAAAA,IAAI,CAACK,GAAL,CAASG,UAAT,CAAoBR,IAAI,CAACK,GAAL,CAASC,QAA7B,EAAuC,UAAUG,GAAV,EAAeC,UAAf,EAA2B;AAChE,cAAID,GAAJ,EAAS;AACPE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,WAFD,MAEO;AACLZ,YAAAA,KAAK,CAACgB,QAAN,CAAe,UAAf,EAA2B;AACzBP,cAAAA,QAAQ,EAAEC,WADe;AAEzBO,cAAAA,OAAO,EAAEC,QAAQ,CAACL,UAAD,EAAa,EAAb;AAFQ,aAA3B;AAID;AACF,SATD;AAUD,OAZD,MAYO;AACLV,QAAAA,IAAI,CAACK,GAAL,CAASG,UAAT,CAAoBX,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBM,QAArC,EAA+C,UAACG,GAAD,EAAMO,aAAN,EAAwB;AACrE,cAAIP,GAAJ,EAAS;AACPE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,WAFD,MAEO,IAAIM,QAAQ,CAACC,aAAD,EAAgB,EAAhB,CAAR,KAAgCnB,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBc,OAArD,EAA8D;AACnEjB,YAAAA,KAAK,CAACgB,QAAN,CAAe,UAAf,EAA2B;AACzBP,cAAAA,QAAQ,EAAET,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBM,QADF;AAEzBQ,cAAAA,OAAO,EAAEE;AAFgB,aAA3B;AAID;AACF,SATD;AAUD;AACF;AACF,GA3BU,EA2BR,GA3BQ,CAAX;AA4BD,CAhCD;;AAkCA,eAAelB,QAAf","sourcesContent":["\nimport Web3 from 'web3'\nimport {store} from '../store/store'\n\nlet pollWeb3 = function (state) {\n  let web3 = window.web3\n  web3 = new Web3(web3.currentProvider)\n\n  setInterval(() => {\n    if (web3 && store.state.web3.web3Instance) {\n      if (web3.eth.coinbase !== store.state.web3.coinbase) {\n        let newCoinbase = web3.eth.coinbase\n        web3.eth.getBalance(web3.eth.coinbase, function (err, newBalance) {\n          if (err) {\n            console.log(err)\n          } else {\n            store.dispatch('pollWeb3', {\n              coinbase: newCoinbase,\n              balance: parseInt(newBalance, 10)\n            })\n          }\n        })\n      } else {\n        web3.eth.getBalance(store.state.web3.coinbase, (err, polledBalance) => {\n          if (err) {\n            console.log(err)\n          } else if (parseInt(polledBalance, 10) !== store.state.web3.balance) {\n            store.dispatch('pollWeb3', {\n              coinbase: store.state.web3.coinbase,\n              balance: polledBalance\n            })\n          }\n        })\n      }\n    }\n  }, 500)\n}\n\nexport default pollWeb3"]}]}