{"remainingRequest":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/babel-loader/lib/index.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Exchange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/src/components/Exchange.vue","mtime":1558259220870},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/kennyhsieh/Documents/0x1 Blockchain/BCP/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { Networks } from \"../web3/networks\";\nexport default {\n  data: function data() {\n    return {\n      user: {\n        linepoint: 40,\n        bcppoint: 3000,\n        ex_linepoint: 0\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    console.log(\"submit exchange\");\n    this.$store.dispatch(\"getExchangeContractInstance\");\n  },\n  methods: {\n    getBalance: function getBalance() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (valid) {\n        if (valid) {\n          console.log(\"Get Balance\");\n\n          _this.$store.state.contractInstance().balanceOf(_this.$store.state.web3.coinbase, {\n            gas: 3000000,\n            from: _this.$store.state.web3.coinbase\n          }, function (err, result) {\n            if (err) {\n              console.log(err);\n              _this.pending = false;\n            } else {\n              console.log(\"Balance:\", result.c[0]);\n            }\n          });\n        }\n      });\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    isInjected: function isInjected(state) {\n      return state.web3.isInjected;\n    },\n    network: function network(state) {\n      return Networks[state.web3.networkId];\n    },\n    coinbase: function coinbase(state) {\n      return state.web3.coinbase;\n    },\n    balance: function balance(state) {\n      return state.web3.balance;\n    },\n    ethBalance: function ethBalance(state) {\n      if (state.web3.web3Instance !== null) return state.web3.web3Instance().fromWei(state.web3.balance, 'ether');\n    }\n  }), {\n    exCurrency: {\n      get: function get() {\n        return this.user.ex_linepoint * 2;\n      }\n    },\n    displayCurrency: {\n      get: function get() {\n        return this.user.ex_linepoint || '';\n      },\n      set: function set(value) {\n        this.user.ex_linepoint = value;\n      }\n    }\n  })\n};",{"version":3,"sources":["Exchange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,YAAA,EAAA;AAHA;AADA,KAAA;AAOA,GATA;AAWA,EAAA,WAXA,yBAWA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,iBAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,6BAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,YAAA,GAAA,EAAA,OADA;AAEA,YAAA,IAAA,EAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAFA,WAAA,EAGA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,gBAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,aAHA,MAGA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,WAVA;AAYA;AACA,OAhBA;AAiBA;AAnBA,GAfA;AAoCA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,UAAA;AAAA,KADA;AAEA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA;AAAA,KAFA;AAGA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AAAA,KAHA;AAIA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AAAA,KAJA;AAKA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,YAAA,KAAA,IAAA,EAAA,OAAA,KAAA,CAAA,IAAA,CAAA,YAAA,GAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,OAAA,CAAA;AACA;AAPA,GAAA,CADA;AAWA,IAAA,UAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,IAAA,CAAA,YAAA,GAAA,CAAA;AACA;AAHA,KAXA;AAgBA,IAAA,eAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,IAAA,CAAA,YAAA,IAAA,EAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA;AANA;AAhBA;AApCA,CAAA","sourcesContent":["<template>\n  <div id=\"exchange\">\n    <h2 id=\"currency_header\">YOUR CURRENCY & ACCOUNT</h2>\n    <div id=\"Lcurrency\">\n      <v-layout row>\n        <v-flex xs6>\n          <v-subheader>Line Point</v-subheader>\n        </v-flex>\n        <v-flex xs10>\n          <v-text-field\n            label=\"Amount\"\n            :value=\"user.linepoint\"\n            prefix=\"$\"\n            color=\"cyan\"\n            readonly\n            class=\"input_text\"\n          ></v-text-field>\n        </v-flex>\n        <v-flex xs6>\n          <v-subheader>BCP Point</v-subheader>\n        </v-flex>\n        <v-flex xs10>\n          <v-text-field\n            label=\"Amount\"\n            :value=\"user.bcppoint\"\n            prefix=\"$\"\n            readonly\n            color=\"cyan\"\n            class=\"input_text\"\n          ></v-text-field>\n        </v-flex>\n      </v-layout>\n    </div>\n    <div id=\"Bcurrency\">\n      <div class=\"metamask-info\">\n        <p v-if=\"isInjected\" id=\"has-metamask\">\n          <i aria-hidden=\"true\" class=\"fa fa-check\"></i> Metamask installed\n        </p>\n        <p v-else id=\"no-metamask\">\n          <i aria-hidden=\"true\" class=\"fa fa-times\"></i> Metamask not found\n        </p>\n        <p>Network: {{ network }}</p>\n        <p>Account: {{ coinbase }}</p>\n        <p>Balance: {{ balance }} Wei</p>\n      </div>\n    </div>\n    <h2 id=\"exchange_header\">EXCHANGE CURRENCY</h2>\n    <div id=\"linepoint\">\n      <img class=\"point\" src=\"../assets/line.svg\">\n      <v-text-field\n        v-model=\"displayCurrency\"\n        v-validate=\"'required|numeric|max_value:' + user.linepoint\"\n        data-vv-name=\"point\"\n        :error-messages=\"errors.collect('point')\"\n        label=\"Line point\"\n        prefix=\"$\"\n        placeholder=\"enter your point\"\n        color=\"cyan\"\n        class=\"ex_text\"\n      ></v-text-field>\n    </div>\n    <div id=\"bcppoint\">\n      <img class=\"point\" src=\"../assets/money-bag.svg\">\n      <v-text-field\n        v-model=\"exCurrency\"\n        label=\"BCP point\"\n        prefix=\"$\"\n        color=\"cyan\"\n        readonly\n        class=\"ex_text\"\n      ></v-text-field>\n    </div>\n    <div id=\"btn_submit\">\n      <v-btn @click=\"getBalance\" color=\"warning\">Submit</v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { Networks } from \"../web3/networks\";\nexport default {\n  data() {\n    return {\n      user: {\n        linepoint: 40,\n        bcppoint: 3000,\n        ex_linepoint: 0\n      }\n    };\n  },\n\n  beforeMount() {\n          console.log(\"submit exchange\");\n          this.$store.dispatch(\"getExchangeContractInstance\");\n  },\n  methods: {\n    getBalance() {\n      this.$validator.validateAll().then(valid => {\n        if (valid) {\n      console.log(\"Get Balance\")\n      this.$store.state.contractInstance().balanceOf(this.$store.state.web3.coinbase, {\n        gas: 3000000,\n        from: this.$store.state.web3.coinbase\n      }, (err, result) => {\n        if (err) {\n          console.log(err)\n          this.pending = false\n        } else {\n          console.log(\"Balance:\", result.c[0])\n        }\n      })\n\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapState({\n      isInjected: state => state.web3.isInjected,\n      network: state => Networks[state.web3.networkId],\n      coinbase: state => state.web3.coinbase,\n      balance: state => state.web3.balance,\n      ethBalance: state => {\n        if(state.web3.web3Instance !== null) return state.web3.web3Instance().fromWei(state.web3.balance, 'ether')\n      }\n    }),\n\n    exCurrency: {\n      get() {\n        return this.user.ex_linepoint * 2;\n      }\n    },\n    displayCurrency: {\n      get() {\n        return this.user.ex_linepoint || ''\n      },\n      set(value) {\n        this.user.ex_linepoint = value; \n      },\n    },\n  },\n};\n</script>\n\n\n<style lang=\"scss\">\n#exchange {\n  display: grid; //  10% 15% 10% 50% 15%\n  grid-template-rows: 60px 90px 60px 200px auto;\n  grid-template-columns: 1fr 1fr;\n\n  h2 {\n    color: #cfcfcf;\n    font-weight: 500;\n  }\n\n  .metamask-info {\n    p {\n      line-height: 10px;\n    }\n  }\n  #currency_header {\n    grid-row-start: 1;\n    grid-row-end: 2;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    padding: 30px;\n  }\n  #exchange_header {\n    grid-row-start: 3;\n    grid-row-end: 4;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    padding: 30px;\n  }\n  #Lcurrency {\n    grid-row-start: 2;\n    grid-row-end: 3;\n    grid-column-start: 1;\n    grid-column-end: 2;\n    padding: 30px;\n  }\n  #Bcurrency {\n    grid-row-start: 2;\n    grid-row-end: 3;\n    grid-column-start: 2;\n    grid-column-end: 3;\n  }\n  #linepoint {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 30px;\n  }\n  #bcppoint {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 30px;\n  }\n  .point {\n    display: block;\n    width: 84px;\n  }\n  #btn_submit {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n  }\n#has-metamask {\ncolor: green;\n}\n#no-metamask {\ncolor:red\n}\n}\n</style>\n"],"sourceRoot":"src/components"}]}